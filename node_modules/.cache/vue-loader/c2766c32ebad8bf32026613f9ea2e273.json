{"remainingRequest":"/Users/william/code/william-personal/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/william/code/william-personal/portfolio/src/components/Presentation.vue?vue&type=style&index=0&id=918d136c&scoped=true&lang=scss&","dependencies":[{"path":"/Users/william/code/william-personal/portfolio/src/components/Presentation.vue","mtime":1621811889192},{"path":"/Users/william/code/william-personal/portfolio/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ0Avc3R5bGVzL2NvbnN0YW50cy5zY3NzJzsKCi5wYXJhZ3JhcGggewogICAgY29sb3I6IG1hcC1nZXQoJGNvbG9ycywgbGlnaHQpOwogICAgLmJlZ2luIHsKICAgICAgICBjb2xvcjogbWFwLWdldCgkY29sb3JzLCBzZWNvbmRhcnkpOwogICAgfQp9Cg=="},{"version":3,"sources":["Presentation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Presentation.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"paragraph\">\n    <h3>{{content.metadata.pres_title}}</h3>\n    <div class=\"begin\">{{content.metadata.pres_first}}</div>\n    <p>{{content.metadata.pres_second}}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'Description',\n    props: ['content']\n}\n</script>\n\n<style scoped lang=\"scss\">\n    @import '@/styles/constants.scss';\n\n    .paragraph {\n        color: map-get($colors, light);\n        .begin {\n            color: map-get($colors, secondary);\n        }\n    }\n</style>"]}]}