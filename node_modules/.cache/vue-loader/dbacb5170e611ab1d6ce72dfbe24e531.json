{"remainingRequest":"/Users/william/code/william-personal/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/william/code/william-personal/portfolio/src/components/Skills.vue?vue&type=style&index=0&id=4cdb3572&scoped=true&lang=scss&","dependencies":[{"path":"/Users/william/code/william-personal/portfolio/src/components/Skills.vue","mtime":1621811889192},{"path":"/Users/william/code/william-personal/portfolio/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/william/code/william-personal/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnQC9zdHlsZXMvY29uc3RhbnRzLnNjc3MnOwoKI3NraWxscyB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKG1hcC1nZXQoJGNvbG9ycywgbGlnaHQpLCAxMDAlKTsKfQoKQG1lZGlhKG1pbi13aWR0aDogI3ttYXAtZ2V0KCRicmVha3BvaW50cywgbWVkaXVtKX0pIHsKICAgIC5zZWN0aW9uLWNvbnRlbnQgewogICAgICAgIHdpZHRoOiA4MCU7CiAgICAgICAgbWFyZ2luOiAwIGF1dG87CiAgICB9Cn0KCmltZ3sKICAgIG1heC13aWR0aDogMTIwcHg7Cn0KCi5hbHRDYXB0aW9uewogICAgY29sb3I6IG1hcC1nZXQoJGNvbG9ycywgY29tcGxlbWVudGFyeSk7CiAgICBtYXJnaW4tdG9wOiAxcmVtOwp9Cg=="},{"version":3,"sources":["Skills.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Skills.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <section id=\"skills\">\n        <AnimateOnVisible name=\"fadeDown\" :duration=\"1\">\n            <Title isSkill :title=\"content.metadata.title\" :description=\"content.metadata.description\" />\n        </AnimateOnVisible>\n\n        <div class=\"section-content\">\n            <div class=\"container-fluid\">\n                <div class=\"row d-flex flex-wrap align-items-center\">\n                    <div class=\"col-md-2 m-auto pb-4\" v-for=\"(post, index) in this.content.metadata.items\" :key=\"index\">\n                        <AnimateOnVisible name=\"bounce\">\n                            <img id=\"imgLogo\" class=\"img-responsive mx-auto d-block\" :src=\"getImgUrl(post.img)\" :alt=\"post.title\"/>\n                            <div id=\"divAlt\" class=\"altCaption text-center\">{{post.title}}</div>\n                        </AnimateOnVisible>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\n    import Title from './Title.vue'\n\n    export default {\n        name: 'Skills',\n        components: {\n            Title,\n        },\n        props: ['content'],\n        methods: {\n            getImgUrl(img) {\n                return require('../assets/img/logo/'+img);\n            },\n        },\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    @import '@/styles/constants.scss';\n\n    #skills {\n        background-color: lighten(map-get($colors, light), 100%);\n    }\n\n    @media(min-width: #{map-get($breakpoints, medium)}) {\n        .section-content {\n            width: 80%;\n            margin: 0 auto;\n        }\n    }\n\n    img{\n        max-width: 120px;\n    }\n\n    .altCaption{\n        color: map-get($colors, complementary);\n        margin-top: 1rem;\n    }\n</style>"]}]}